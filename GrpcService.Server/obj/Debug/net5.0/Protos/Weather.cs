// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/weather.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcService.Server.Protos {

  /// <summary>Holder for reflection information generated from Protos/weather.proto</summary>
  public static partial class WeatherReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/weather.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeatherReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b3Mvd2VhdGhlci5wcm90bxIHd2VhdGhlciKfAQofR2V0Q3VycmVu",
            "dFdlYXRoZXJGb3JDaXR5UmVxdWVzdBIMCgRjaXR5GAEgASgJEj0KBXVuaXRz",
            "GAIgASgOMi4ud2VhdGhlci5HZXRDdXJyZW50V2VhdGhlckZvckNpdHlSZXF1",
            "ZXN0LlVuaXRzIi8KBVVuaXRzEgwKCHN0YW5kYXJkEAASCgoGTWV0cmljEAES",
            "DAoISW1wZXJhaWwQAiI4Cg9XZWF0aGVyUmVzcG9uc2USEgoKdGVtcHJhdHVy",
            "ZRgBIAEoARIRCglmZWVsX3JlYWwYAiABKAEyaQoOV2VhdGhlclNlcnZpY2US",
            "VwoRR2V0Q3VycmVudFdlYXRoZXISKC53ZWF0aGVyLkdldEN1cnJlbnRXZWF0",
            "aGVyRm9yQ2l0eVJlcXVlc3QaGC53ZWF0aGVyLldlYXRoZXJSZXNwb25zZUIc",
            "qgIZR3JwY1NlcnZpY2UuU2VydmVyLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest), global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Parser, new[]{ "City", "Units" }, null, new[]{ typeof(global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcService.Server.Protos.WeatherResponse), global::GrpcService.Server.Protos.WeatherResponse.Parser, new[]{ "Temprature", "FeelReal" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetCurrentWeatherForCityRequest : pb::IMessage<GetCurrentWeatherForCityRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCurrentWeatherForCityRequest> _parser = new pb::MessageParser<GetCurrentWeatherForCityRequest>(() => new GetCurrentWeatherForCityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentWeatherForCityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcService.Server.Protos.WeatherReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentWeatherForCityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentWeatherForCityRequest(GetCurrentWeatherForCityRequest other) : this() {
      city_ = other.city_;
      units_ = other.units_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentWeatherForCityRequest Clone() {
      return new GetCurrentWeatherForCityRequest(this);
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 1;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 2;
    private global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units units_ = global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units.Standard;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentWeatherForCityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentWeatherForCityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (City != other.City) return false;
      if (Units != other.Units) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Units != global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units.Standard) hash ^= Units.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (City.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(City);
      }
      if (Units != global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units.Standard) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Units);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (City.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(City);
      }
      if (Units != global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units.Standard) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Units);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Units != global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units.Standard) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Units);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentWeatherForCityRequest other) {
      if (other == null) {
        return;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Units != global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units.Standard) {
        Units = other.Units;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            City = input.ReadString();
            break;
          }
          case 16: {
            Units = (global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            City = input.ReadString();
            break;
          }
          case 16: {
            Units = (global::GrpcService.Server.Protos.GetCurrentWeatherForCityRequest.Types.Units) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetCurrentWeatherForCityRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Units {
        [pbr::OriginalName("standard")] Standard = 0,
        [pbr::OriginalName("Metric")] Metric = 1,
        [pbr::OriginalName("Imperail")] Imperail = 2,
      }

    }
    #endregion

  }

  public sealed partial class WeatherResponse : pb::IMessage<WeatherResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeatherResponse> _parser = new pb::MessageParser<WeatherResponse>(() => new WeatherResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeatherResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcService.Server.Protos.WeatherReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeatherResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeatherResponse(WeatherResponse other) : this() {
      temprature_ = other.temprature_;
      feelReal_ = other.feelReal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeatherResponse Clone() {
      return new WeatherResponse(this);
    }

    /// <summary>Field number for the "temprature" field.</summary>
    public const int TempratureFieldNumber = 1;
    private double temprature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Temprature {
      get { return temprature_; }
      set {
        temprature_ = value;
      }
    }

    /// <summary>Field number for the "feel_real" field.</summary>
    public const int FeelRealFieldNumber = 2;
    private double feelReal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FeelReal {
      get { return feelReal_; }
      set {
        feelReal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeatherResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeatherResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Temprature, other.Temprature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FeelReal, other.FeelReal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Temprature != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Temprature);
      if (FeelReal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FeelReal);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Temprature != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Temprature);
      }
      if (FeelReal != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FeelReal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Temprature != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Temprature);
      }
      if (FeelReal != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(FeelReal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Temprature != 0D) {
        size += 1 + 8;
      }
      if (FeelReal != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeatherResponse other) {
      if (other == null) {
        return;
      }
      if (other.Temprature != 0D) {
        Temprature = other.Temprature;
      }
      if (other.FeelReal != 0D) {
        FeelReal = other.FeelReal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Temprature = input.ReadDouble();
            break;
          }
          case 17: {
            FeelReal = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Temprature = input.ReadDouble();
            break;
          }
          case 17: {
            FeelReal = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
